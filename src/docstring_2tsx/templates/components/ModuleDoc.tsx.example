import React from 'react';

// Sub-components
export const Signature = ({ signature }: { signature: string }) => (
  <pre className="bg-gray-100 p-4 rounded-md overflow-auto">
    <code className="language-python">{signature}</code>
  </pre>
);

export const Description = ({ description }: { description: string }) => (
  <div className="my-4 text-gray-700">{description}</div>
);

export const GitHubLink = ({ url }: { url: string }) => (
  <div className="flex items-center bg-gray-100 p-2 rounded mb-4">
    <span className="github-icon mr-2">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16" fill="currentColor">
        <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" />
      </svg>
    </span>
    <a href={url} className="text-blue-600 hover:underline" target="_blank" rel="noopener noreferrer">
      View source on GitHub
    </a>
  </div>
);

export const ParamsTable = ({ params }: { params: Array<{ name: string; type: string; description: string }> }) => (
  <div className="my-4">
    <h3 className="text-lg font-semibold mb-2">Parameters</h3>
    <div className="overflow-x-auto">
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Name</th>
            <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Type</th>
            <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">Description</th>
          </tr>
        </thead>
        <tbody className="divide-y divide-gray-200">
          {params.map((param) => (
            <tr key={param.name}>
              <td className="px-4 py-2 text-sm font-medium">{param.name}</td>
              <td className="px-4 py-2 text-sm text-gray-600">{param.type}</td>
              <td className="px-4 py-2 text-sm">{param.description}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
);

export const Section = ({
  title,
  content,
  contentType,
}: {
  title: string;
  content: any;
  contentType: 'text' | 'code' | 'data' | 'reference';
}) => {
  // Render different content based on contentType
  let renderedContent;

  if (contentType === 'code') {
    renderedContent = (
      <pre className="bg-gray-100 p-4 rounded-md overflow-auto my-2">
        <code className="language-python">{content}</code>
      </pre>
    );
  } else if (contentType === 'reference') {
    renderedContent = (
      <ul className="list-disc pl-5 my-2">
        {Array.isArray(content) ? (
          content.map((ref, index) => (
            <li key={index}>
              {ref.description && <strong>{ref.description}</strong>}
              {ref.description && ref.source && ': '}
              {ref.source}
            </li>
          ))
        ) : (
          <li>{content}</li>
        )}
      </ul>
    );
  } else if (contentType === 'data') {
    if (title === 'Returns') {
      renderedContent = (
        <p className="my-2">
          {content.type && <strong>{content.type}</strong>}
          {content.type && content.description && ': '}
          {content.description}
        </p>
      );
    } else if (title === 'Raises') {
      renderedContent = (
        <ul className="list-disc pl-5 my-2">
          {content.map((item: any, index: number) => (
            <li key={index}>
              {item.type && <strong>{item.type}</strong>}
              {item.type && item.description && ': '}
              {item.description}
            </li>
          ))}
        </ul>
      );
    }
  } else {
    // Default text content
    renderedContent = <p className="my-2">{content}</p>;
  }

  return (
    <div className="my-4">
      <h3 className="text-lg font-semibold mb-2">{title}</h3>
      {renderedContent}
    </div>
  );
};

export const MemberDoc = ({
  name,
  type,
  signature,
  description,
  params,
  githubUrl,
  sections,
}: {
  name: string;
  type: 'class' | 'function';
  signature: string;
  description?: string;
  params?: Array<{ name: string; type: string; description: string }>;
  githubUrl?: string;
  sections?: Array<{ title: string; content: any; contentType: 'text' | 'code' | 'data' | 'reference' }>;
}) => {
  return (
    <div className="member mb-10 border-b pb-8" id={name.toLowerCase()}>
      <h2 className="text-2xl font-bold mb-4">{name}</h2>
      {githubUrl && <GitHubLink url={githubUrl} />}
      <Signature signature={signature} />
      {description && <Description description={description} />}
      {params && params.length > 0 && <ParamsTable params={params} />}
      {sections && sections.map((section, index) => (
        <Section
          key={index}
          title={section.title}
          content={section.content}
          contentType={section.contentType}
        />
      ))}
    </div>
  );
};

export const ModuleDoc = ({
  moduleName,
  members,
}: {
  moduleName: string;
  members: Array<{
    name: string;
    type: 'class' | 'function';
    signature: string;
    description?: string;
    params?: Array<{ name: string; type: string; description: string }>;
    githubUrl?: string;
    sections?: Array<{ title: string; content: any; contentType: 'text' | 'code' | 'data' | 'reference' }>;
  }>;
}) => {
  return (
    <div className="module-doc py-8">
      <h1 className="text-3xl font-bold mb-8">{moduleName}</h1>
      <div className="members">
        {members.map((member) => (
          <MemberDoc key={member.name} {...member} />
        ))}
      </div>
    </div>
  );
};

export default ModuleDoc;
